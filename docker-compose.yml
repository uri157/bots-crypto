services:
  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server","--appendonly","yes"]
    restart: unless-stopped
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

  marketdata:
    build: .
    image: crypto-bot:latest
    container_name: marketdata
    command: ["python","-u","-m","runner.marketdata"]
    env_file: .env
    environment:
      BOT_ID: marketdata
      HTTP_PORT: 9002
      REDIS_URL: redis://redis:6379/0
      DB_PATH: /app/data/trading.db
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - duckdb-data:/app/data
    ports:
      - "9002:9002"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\nsys.exit(0) if urllib.request.urlopen('http://localhost:9002/healthz',timeout=2).status==200 else sys.exit(1)\nPY",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ema:
    build: .
    image: crypto-bot:latest
    container_name: ema
    command: ["python","-u","-m","runner.ema"]
    env_file: .env
    environment:
      BOT_ID: ema
      HTTP_PORT: 9001
      REDIS_URL: redis://redis:6379/0
      DB_PATH: /app/data/trading.db
      CAPITAL_LOCK_KEY: capital:lock:ema
      # Si tu EMA depende del feed de marketdata (Redis), no hace falta tocar nada.
      # Si lee directo del gateway WS/REST, podés prescindir de marketdata.
    depends_on:
      redis:
        condition: service_healthy
      # Descomenta si querés forzar que arranque cuando marketdata esté healthy:
      # marketdata:
      #   condition: service_healthy
    ports:
      - "9001:9001"
    volumes:
      - duckdb-data:/app/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\nsys.exit(0) if urllib.request.urlopen('http://localhost:9001/healthz',timeout=2).status==200 else sys.exit(1)\nPY",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  duckdb-data:
  redis-data:
